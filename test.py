# generated by ChatGPT for testing micro-deploy project
# add <get-input> tag to all input() function calls in-order to get processed by the frontend
#
class TodoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)
        print(f"Task '{task}' added.")

    def complete_task(self, task_index):
        if 0 <= task_index < len(self.tasks):
            completed_task = self.tasks.pop(task_index)
            print(f"Task '{completed_task}' marked as completed.")
        else:
            print("Invalid task index.")

    def view_tasks(self):
        if self.tasks:
            print("Tasks:")
            for index, task in enumerate(self.tasks):
                print(f"{index + 1}. {task}")
        else:
            print("No tasks in the list.")

    def remove_task(self, task_index):
        if 0 <= task_index < len(self.tasks):
            removed_task = self.tasks.pop(task_index)
            print(f"Task '{removed_task}' removed from the list.")
        else:
            print("Invalid task index.")

def main():
    todo_list = TodoList()

    while True:
        print("\nTodo List Options:")
        print("1. Add Task")
        print("2. Complete Task")
        print("3. View Tasks")
        print("4. Remove Task")
        print("5. Exit")

        choice = input("<get-input>Enter your choice: \n")

        if choice == '1':
            task = input("<get-input>Enter the task: \n")
            todo_list.add_task(task)
        elif choice == '2':
            task_index = int(input("<get-input>Enter the index of the task to complete: \n")) - 1
            todo_list.complete_task(task_index)
        elif choice == '3':
            todo_list.view_tasks()
        elif choice == '4':
            task_index = int(input("<get-input>Enter the index of the task to remove: \n")) - 1
            todo_list.remove_task(task_index)
        elif choice == '5':
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 5.")

if __name__ == "__main__":
    main()
